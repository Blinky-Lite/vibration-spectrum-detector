[{"id":"2fb21a6b.366766","type":"tab","label":"chill-detector-status","disabled":false,"info":""},{"id":"bd9a93d5.70311","type":"tab","label":"AppIndex","disabled":false,"info":""},{"id":"e8763d21.b7461","type":"subflow","name":"HTML","info":"","category":"","in":[{"x":40,"y":40,"wires":[{"id":"91e3585b.224158"}]}],"out":[]},{"id":"6ad7c930.1a06b8","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":false},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#000000","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Oscillation Overthruster Display","hideToolbar":"false","allowSwipe":"false","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"c309d5c4.23e2d8","type":"mongodb","z":"","hostname":"$(MONGODBIP)","port":"27017","db":"blinky-lite","name":"mongodb"},{"id":"f162f8da.5ea6d8","type":"websocket-listener","z":"","path":"/chill-detector-status/websocket","wholemsg":"false"},{"id":"dfcdea8e.1b6118","type":"template","z":"2fb21a6b.366766","name":"Body","field":"payload.body","fieldType":"msg","format":"html","syntax":"mustache","template":"    <div width=\"100%\">\n        <div class='row' style='padding-top:0px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'><div  id='maxAmp01BarChart'></div></div>\n            <div class='col-md-6' align='center'><div  id='maxAmp02BarChart'></div></div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n                <div id='maxAmpStripChart'></div>\n            </div>\n        </div>\n        <div class='row' style='padding-top:0px; padding-bottom:10px;'>\n            <div class='col-md-3' align='center'></div>\n            <div class='col-md-6' align='center' >\n                <button type=\"button\" class=\"btn jumbotron-button btn-block\" width='80%' onclick=\"restartPlot()\">Restart Plot</button>\n            </div>\n            <div class='col-md-3' align='center'></div>\n        </div>\n    </div>","output":"str","x":250,"y":140,"wires":[["de97baba.d0c818"]]},{"id":"88320d38.511a3","type":"mongodb in","z":"2fb21a6b.366766","mongodb":"c309d5c4.23e2d8","name":"Find in device db","collection":"devices","operation":"find","x":490,"y":360,"wires":[["55db3dd7.e1f5c4"]]},{"id":"1eaec386.468dfc","type":"status","z":"2fb21a6b.366766","name":"Socket Status","scope":["a6b964dd.6199b8","8bf91f6f.6883b"],"x":90,"y":300,"wires":[["303b8e57.c8e5a2"]]},{"id":"303b8e57.c8e5a2","type":"function","z":"2fb21a6b.366766","name":"Check Socket Status","func":"var newMsg = null;\nif (msg.status.text.indexOf(\"connected \") >= 0)\n{\n    newMsg = {topic:'socketStatus', payload:'connected'};\n}\nif (msg.status.text.indexOf(\"common.status.disconnected\") >= 0)\n{\n    newMsg = {topic:'socketStatus', payload:'disconnected'};\n}\nreturn newMsg;","outputs":1,"noerr":0,"x":280,"y":300,"wires":[["e386f4a8.856f58"]]},{"id":"e386f4a8.856f58","type":"function","z":"2fb21a6b.366766","name":"Allow Database poll","func":"if (msg.topic == 'socketStatus')\n{\n    context.set('socketStatus', msg.payload);\n    return null;\n}\nif (msg.topic == 'pollDatabase')\n{\n    var socketStatus = context.get('socketStatus');\n    if (socketStatus == undefined) return null;\n    if (socketStatus == 'connected') return {topic:'databasePoll', payload:true};\n}\nreturn null;","outputs":1,"noerr":0,"x":490,"y":300,"wires":[["b2f4ba54.265dc8"]]},{"id":"c991762f.8d1b58","type":"inject","z":"2fb21a6b.366766","name":"","topic":"pollDatabase","payload":"","payloadType":"date","repeat":"1","crontab":"","once":true,"onceDelay":0.1,"x":290,"y":240,"wires":[["e386f4a8.856f58"]]},{"id":"43ac8ec.9bf207","type":"template","z":"e8763d21.b7461","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>","output":"str","x":790,"y":40,"wires":[["233dd1ed.d17ede"]]},{"id":"99432fa.98673d","type":"template","z":"e8763d21.b7461","name":"Foot","field":"payload.foot","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Foot -->\n    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>","output":"str","x":670,"y":40,"wires":[["43ac8ec.9bf207"]]},{"id":"4ac3208f.90f57","type":"template","z":"e8763d21.b7461","name":"Head","field":"payload.head","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Head -->\n    <meta charset=\"UTF-8\"/>\n    <link rel=\"icon\" href=\"/img/faviconBC.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>","output":"str","x":550,"y":40,"wires":[["99432fa.98673d"]]},{"id":"9f84c5ba.086818","type":"template","z":"e8763d21.b7461","name":"navBar","field":"payload.navBar","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <div class=\"row\">\n            <div class=\"col-md-2\" style=\"text-align: left\"><a href='https://www.braincool.se/' target='_blank'><img src=\"/img/braincoolLogo.png\" height=\"50px\"/></a></div>\n            <div class=\"col-md-8\" style=\"text-align: center\">\n                <h1 class=\"display-5 jumbotron-title\">{{{payload.title}}}</h1>\n            </div>\n            <div class=\"col-md-2\" style=\"text-align: right\"><a href='https://www.blinky-lite.io/' target='_blank'><img src=\"/img/BlinkyLogo.gif\" height=\"50px\"/></a></div>\n        </div>\n    </div>\n","output":"str","x":420,"y":40,"wires":[["4ac3208f.90f57"]]},{"id":"233dd1ed.d17ede","type":"http response","z":"e8763d21.b7461","name":"","statusCode":"","headers":{},"x":910,"y":40,"wires":[]},{"id":"91e3585b.224158","type":"template","z":"e8763d21.b7461","name":"CSS","field":"payload.css","fieldType":"msg","format":"css","syntax":"mustache","template":"        :root \n        {\n          --container-background-color: #557a95;\n          --container-title-color: #fdc300;\n          --container-text-color: #ffffff;\n          --background-color: #7395ae;\n          --sub-container-background-color: #c6c2bb;\n          --sub-container-title-color: #016a71;\n          --sub-container-text-color: #000000;\n        }\n        body \n        {\n          background-color: var(--background-color);\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        .jumbotron \n        {\n          background-color: var(--container-background-color) !important;\n          color:var(--container-text-color);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--container-title-color);\n        }\n        .jumbotron-button\n        {\n          color: var(--background-color);\n          background-color: var(--container-title-color);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--container-background-color) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: #999999;\n        }\n        .card-button\n        {\n          color: var(--container-title-color);\n          background-color: var(--container-background-color) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--container-title-color);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: var(--container-background-color);\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: var(--container-text-color);\n          background-color: var(--background-color);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }","output":"str","x":130,"y":40,"wires":[["47ebd6c.9f66a28"]]},{"id":"de97baba.d0c818","type":"subflow:e8763d21.b7461","z":"2fb21a6b.366766","name":"","x":370,"y":140,"wires":[]},{"id":"9a1fbe36.09896","type":"template","z":"2fb21a6b.366766","name":"JavaScript","field":"payload.javascript","fieldType":"msg","format":"javascript","syntax":"mustache","template":"{{{payload.script.stripChartWidget}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.barWidget}}}\n// Global Javascript\nvar ws;\nvar retries = 0;\nvar userID = -1;\nvar maxAmpStripChartPlotConfig = \n{\n    trace1Title : 'Device 1',\n    trace1Color : '#557a95',\n    trace1GridColor : '#beceda',\n    trace2Title : 'Device 2',\n    trace2Color : '#f2a321',\n    trace2GridColor : '#f8d8a0',\n    plotLength  : 600,\n    width   : '',\n    height  :   '500',\n    htmlId  :   'maxAmpStripChart'\n};\n\nlet maxAmpStripChart = new StripChart(maxAmpStripChartPlotConfig);\n// Doc Ready Javascript\n$( document ).ready(function()\n{\n    userID  = Math.floor(Math.random() * 4096);\n    wsConnectC();\n });\n// Socket Connect JavaScript\nfunction wsConnectC()\n{\n    var uri = window.location.href.split('://');\n    var wslead = 'ws://';\n    if (uri[0] == 'https') wslead = 'wss://';\n    ws = new WebSocket(wslead + uri[1] + '/websocket');\n    ws.onmessage = function(event)\n    {\n        var msg = JSON.parse(event.data);\n        switch(msg.topic)\n        {\n            case 'chill-detector-readings':\n                updateChillDetectorReadings(msg.payload);\n                break;\n            default:\n            // code block\n        }\n\n    };\n    ws.onopen = function()\n    {\n        console.log(\"Websocket connected\");\n    };\n    ws.onclose = function()\n    {\n        console.log(\"Websocket disconnected\");\n    };\n}\nfunction updateChillDetectorReadings(data)\n{\n    var maxAmp  = [null,null];\n    var maxMode = [null,null];\n    var avgPower = [null,null];\n    for (var ii = 0; ii < data.length; ++ii)\n    {\n        if (data[ii].attr == 'maxAmp')\n        {\n            if (data[ii].sys04 == '01') maxAmp[0] = data[ii];\n            if (data[ii].sys04 == '02') maxAmp[1] = data[ii];\n        }\n        if (data[ii].attr == 'maxMode')\n        {\n            if (data[ii].sys04 == '01') maxMode[0] = data[ii];\n            if (data[ii].sys04 == '02') maxMode[1] = data[ii];\n        }\n        if (data[ii].attr == 'avgPower')\n        {\n            if (data[ii].sys04 == '01') avgPower[0] = data[ii];\n            if (data[ii].sys04 == '02') avgPower[1] = data[ii];\n        }\n    }\n\n    var maxAmp01BarChartConfig = \n        {\n            lolo            : maxAmp[0].lolo, \n            low             : maxAmp[0].low, \n            high            : maxAmp[0].high, \n            hihi            : maxAmp[0].hihi, \n            value           : maxAmp[0].value, \n            unit            : maxAmp[0].unit, \n            label           : 'Device 1', \n            lowColor        : '#ffff00', \n            mediumColor     : '#00ff00',\n            highColor       : '#ff0000', \n            backgroundColor : '#557a95', \n            labelColor      : '#ffffff', \n            height          : 360, \n            width           : 200, \n            htmlId          : 'maxAmp01BarChart'\n        };\n    setBarWidget(maxAmp01BarChartConfig);\n    var maxAmp02BarChartConfig = \n        {\n            lolo            : maxAmp[1].lolo, \n            low             : maxAmp[1].low, \n            high            : maxAmp[1].high, \n            hihi            : maxAmp[1].hihi, \n            value           : maxAmp[1].value, \n            unit            : maxAmp[1].unit, \n            label           : 'Device 2', \n            lowColor        : '#ffff00', \n            mediumColor     : '#00ff00',\n            highColor       : '#ff0000', \n            backgroundColor : '#557a95', \n            labelColor      : '#ffffff', \n            height          : 360, \n            width           : 200, \n            htmlId          : 'maxAmp02BarChart'\n        };\n    setBarWidget(maxAmp02BarChartConfig);\n\n    maxAmpStripChart.addTracePoints(maxAmp[0].value, maxAmp[1].value);\n    \n}\nfunction restartPlot()\n{\n    maxAmpStripChart.restartPlot();\n}\n","output":"str","x":110,"y":140,"wires":[["dfcdea8e.1b6118"]]},{"id":"b2f4ba54.265dc8","type":"function","z":"2fb21a6b.366766","name":"Prepare Readings Query","func":"var msg1 = \n{\n    topic           : 'chill-detector-readings',\n    payload         : \n    {\n        sys01   : \"blinky-lite\",\n        sys02   : \"demo\",\n        sys03   : \"chill-detector\",\n        device  : \"mode\",\n        prop    : \"reading\",\n        type    : \"scalar\"\n    }\n};\nreturn msg1;\n","outputs":1,"noerr":0,"x":230,"y":360,"wires":[["88320d38.511a3"]]},{"id":"47ebd6c.9f66a28","type":"template","z":"e8763d21.b7461","name":"Utility Scripts","field":"payload.utilityScripts","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Utility Scripts\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }","output":"str","x":270,"y":40,"wires":[["9f84c5ba.086818"]]},{"id":"4346720b.c0671c","type":"template","z":"2fb21a6b.366766","name":"GaugeWidget","field":"payload.script.gaugeWidget","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n        \n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ': ' + gaugeConfig.value.toString() + gaugeConfig.unit,\n                            font: {color: valueColor},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 40, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 20px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }","output":"str","x":360,"y":60,"wires":[["b5b6dbf9.b285a8"]]},{"id":"b5b6dbf9.b285a8","type":"template","z":"2fb21a6b.366766","name":"Bar Widget","field":"payload.script.barWidget","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Bar Widget\n        function setBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                x: ['', barConfig.label],\n                y: [ barConfig.low, lowValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n                width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                x: ['', barConfig.label],\n                y: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n                width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                x: ['', barConfig.label],\n                y: [barConfig.hihi - barConfig.high, highValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n                width: [0.1, 1.0],\n            };\n            \n            var data = [lowBar, mediumBar, highBar];\n            \n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 40, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 20 //bottom margin\n                        },\n                    height: barConfig.height,\n                    width: barConfig.width,\n                    title: \n                        {\n                            text: barConfig.value.toString() + barConfig.unit,\n                            font: {color: valueColor},\n                        },\n                    xaxis: \n                        {\n                            tickfont: {color:valueColor}\n                        },\n                    yaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor}\n                        },\n                };\n            \n            Plotly.newPlot(barConfig.htmlId, data, layout, {'displayModeBar': false});\n        }","output":"str","x":530,"y":60,"wires":[["de4ecc64.b1ea3"]]},{"id":"de4ecc64.b1ea3","type":"template","z":"2fb21a6b.366766","name":"StripChart Widget","field":"payload.script.stripChartWidget","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                    },\n                    yaxis:\n                    {\n                        title           : 'Shivering Amplitude',\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n                        range           : [0, 10]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right'\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace1Color}\n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace2Color}\n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace2.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.y.push(trace2Pt);\n                if (trace1Pt > this.layout.yaxis.range[1]) this.layout.yaxis.range[1] = 1.1 * trace1Pt;\n                if (trace2Pt > this.layout.yaxis.range[1]) this.layout.yaxis.range[1] = 1.1 * trace2Pt;\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n            restartPlot()\n            {\n                this.plotStartTime = new Date().getTime();\n                this.layout.xaxis.title =  'Seconds since ' + new Date(this.plotStartTime).toLocaleString();\n                this.layout.yaxis.range[1] = 10;\n                this.trace1.x = [];\n                this.trace1.y = [];\n                this.trace2.x = [];\n                this.trace2.y = [];\n            }\n        }\n","output":"str","x":710,"y":60,"wires":[["9a1fbe36.09896"]]},{"id":"f01b631.9746ca","type":"http in","z":"2fb21a6b.366766","name":"HTTP GET","url":"/chill-detector-status","method":"get","upload":false,"swaggerDoc":"","x":80,"y":60,"wires":[["50a5098c.bba368"]]},{"id":"50a5098c.bba368","type":"template","z":"2fb21a6b.366766","name":"Title","field":"payload.title","fieldType":"msg","format":"html","syntax":"mustache","template":"Chill-Detector Status","output":"str","x":210,"y":60,"wires":[["4346720b.c0671c"]]},{"id":"8bf91f6f.6883b","type":"websocket out","z":"2fb21a6b.366766","name":"Socket Out","server":"f162f8da.5ea6d8","client":"","x":1010,"y":360,"wires":[]},{"id":"8d3bc04e.e9f2","type":"http in","z":"bd9a93d5.70311","name":"HTTP GET","url":"/","method":"get","upload":false,"swaggerDoc":"","x":80,"y":60,"wires":[["c7ba55d2.66a0d8"]]},{"id":"78ac69c4.a23c98","type":"template","z":"bd9a93d5.70311","name":"Body","field":"payload.body","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-3' align='center'></div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/chill-detector-status\" target=\"_blank\">Chill Detector Status</a>\n            </div>\n            <div class='col-md-3' align='center'></div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-3' align='center'></div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/\" target=\"_blank\" id=\"blinky-lite-core\">Blinky-Lite Core</a> \n            </div>\n            <div class='col-md-3' align='center'></div>\n        </div>\n    </div>","output":"str","x":910,"y":60,"wires":[["6da7c04f.a32a9"]]},{"id":"72abec.ca7eb414","type":"template","z":"bd9a93d5.70311","name":"Document Ready JavaScript","field":"payload.javascript","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Document Ready JavaScript\n        $( document ).ready(function()\n        {\n            var uri = window.location.href;\n            var loc = uri.indexOf('{{{payload.env.appport}}}');\n            console.log(uri);\n            if (loc >= 0)\n            {\n                $('#blinky-lite-core').attr(\"href\", uri.replace('{{{payload.env.appport}}}','{{{payload.env.coreport}}}'));\n            }\n            else\n            {\n                var newUri = uri.substring(0,uri.length - 1) + ':{{{payload.env.coreport}}}/';\n                console.log(newUri);\n                $('#blinky-lite-core').attr(\"href\", newUri);\n            }\n        });","output":"str","x":600,"y":60,"wires":[["ea777725.689b48"]]},{"id":"ea777725.689b48","type":"template","z":"bd9a93d5.70311","name":"Title","field":"payload.title","fieldType":"msg","format":"html","syntax":"mustache","template":"The Chill Detector System","output":"str","x":790,"y":60,"wires":[["78ac69c4.a23c98"]]},{"id":"6da7c04f.a32a9","type":"subflow:e8763d21.b7461","z":"bd9a93d5.70311","name":"","x":1030,"y":60,"wires":[]},{"id":"ca489a7c.d08328","type":"inject","z":"bd9a93d5.70311","name":"APPPORT env","topic":"APPPORT","payload":"APPPORT","payloadType":"env","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":120,"y":140,"wires":[["c7ba55d2.66a0d8"]]},{"id":"c7ba55d2.66a0d8","type":"function","z":"bd9a93d5.70311","name":"Store env Variables","func":"if (msg.topic == 'APPPORT')\n{\n    context.set(msg.topic, msg.payload);\n    return null;\n}\nif (msg.topic == 'COREPORT')\n{\n    context.set(msg.topic, msg.payload);\n    return null;\n}\nmsg.payload.env = \n{\n   appport  :  context.get('APPPORT'),\n   coreport :  context.get('COREPORT'), \n}\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":60,"wires":[["72abec.ca7eb414"]]},{"id":"fb37d397.a2111","type":"inject","z":"bd9a93d5.70311","name":"COREPORT env","topic":"COREPORT","payload":"COREPORT","payloadType":"env","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":130,"y":180,"wires":[["c7ba55d2.66a0d8"]]},{"id":"55db3dd7.e1f5c4","type":"function","z":"2fb21a6b.366766","name":"Prepare readings","func":"return {\n    topic:msg.topic,\n    payload:\n    {\n        topic:msg.topic,\n        payload:msg.payload\n    }\n};","outputs":1,"noerr":0,"x":710,"y":360,"wires":[["8bf91f6f.6883b"]]}]